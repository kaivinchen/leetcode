#题目：给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为 1000。

class Solution(object):
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        slen = len(s)
        if slen == 0:
            return ""
        res = s[0]
        for i in range(0,slen):
            j = 1
            while i-j>=0 and i+j<=slen-1:  #以i为中心，两边相等的，比如aba
                if s[i-j] == s[i+j]:
                    j+=1
                else:
                    break
            if j>1 and 2*(j-1)+1 > len(res):
                res = s[i-(j-1):i+(j-1)+1]
            
            if i+1 < slen:
                pre = i
                last = i+1
                j = 0
                while pre-j >=0 and last+j <=slen-1:  #以i和i+1为中心，两边相等的，比如abba
                    if s[pre-j] == s[last+j]:
                        j+=1
                    else:
                        break
                if j>0 and 2+2*(j-1) > len(res):
                    res = s[pre-(j-1):last+(j-1)+1]
            
        return res
