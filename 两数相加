/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode head = null;
        ListNode tmpNode = null;
        int res;
        int tmpVal = 0;
        res = l1.val + l2.val;
        if(res >= 10){
            res = res - 10;
            tmpVal = 1;
        }
        head = new ListNode(res);
        tmpNode = head;
        l1 = l1.next;
        l2 = l2.next;
        while(l1 != null && l2 != null){
            res = l1.val + l2.val + tmpVal;
            tmpVal = 0;
            if(res >= 10){
                res = res - 10;
                tmpVal = 1;
            }
            ListNode node = new ListNode(res);
            tmpNode.next = node;
            tmpNode = node;
            l1 = l1.next;
            l2 = l2.next;
        }
        while(l1 != null){
            res = l1.val + tmpVal;
            tmpVal = 0;
            if(res >= 10){
                res = res - 10;
                tmpVal = 1;
            }
            ListNode node = new ListNode(res);
            tmpNode.next = node;
            tmpNode = node;
            l1 = l1.next;           
        }
        while(l2 != null){
            res = l2.val + tmpVal;
            tmpVal = 0;
            if(res >= 10){
                res = res - 10;
                tmpVal = 1;
            }
            ListNode node = new ListNode(res);
            tmpNode.next = node;
            tmpNode = node;
            l2 = l2.next;           
        }
        if(tmpVal == 1){
            ListNode node = new ListNode(1);
            tmpNode.next = node;
        }
        return head;
    }
}
